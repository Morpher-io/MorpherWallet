@startuml
@startuml

|#f5fff8|Localstorage Empty|
start
:Login Page;
#palegreen:User Enters Email and Password;
note left
  The password is requested 
  from the user for UX reasons, 
  hashed and temporarily 
  stored in vuex
end note
:* Wallet checks if user exists
* Wallet fetches Payload (2fa settings) from Backend
* sha356 hash password and store in vuex;
if(Entry For Email In Database) then (not found)
#pink:show error message;
-[#black,dotted]->

	#lightgrey:retry || route to /signup;
    kill;

else  (entry found) 
:* Wallet fetches encrypted keystore from backend
* if 2fa is enabled then keystore is encrypted with 
email/authenticator code by backend before sending it;
if (2fa email) then (enabled)
:Decrypt Keystore with 2fa email code;
endif
if (2fa authenticator) then (enabled)
:Decrypt Keystore with 2fa authenticator code;
endif
:* Save Email in LocalStorage
* Save Password-Encrypted Keystore in LocalStorage;

|#lightyellow|Encrypted Keystore In Localstore|

:Decrypt Keystore with Password;
	if(Unlock With Password) then (password incorrect)
    	#pink:show recovery options;
        end;
    else (success)
|#lightgreen|Unlock Successful|
		:* Save hashed password in session store
* Init vuex datastore: address etc.;
		#lightgreen:show wallet;
        kill;
    endif
endif

@enduml

@enduml