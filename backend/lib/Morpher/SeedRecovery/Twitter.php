<?php

namespace Morpher\SeedRecovery;

class Twitter
{
    /**
     * @param $key is the key generated by the frontend from app_id + user_id
     * @param $encryptedSeed is the seed encrypted with the user_id
     * @param $originalSignupEmail is the mail that might differ from the facebook email address, originally used to signup to Morpher (email/password signup with additional facebook recovery later added). If false, then facebook was used to signup to morpher in the first place
     */
    static function saveAndOverride($key, $encryptedSeed, $originalSignupEmail = false)
    {
        $db = \Morpher\DbConnector::getInstance();

        /**
         * WE're not checking the seed or user_token or anything else that let's us access and decrypt the key
        
        
         */
        $result = $db->connection->query("SELECT * FROM `User` WHERE user_email = " . $db->escapeString($originalSignupEmail));
        $user_id = 0;
        if ($result->num_rows > 0) {
            $user_id = $result->fetch_row()[0];
            $db->connection->query("DELETE FROM Recovery WHERE user_idfk = $user_id AND recoverytype_idfk = 4");
        } else {
            $db->connection->query("INSERT INTO User (user_email) VALUES ( " . $db->escapeString($originalSignupEmail) . " )");

            $user_id = $db->connection->insert_id;
        }
        $db->connection->query("INSERT INTO Recovery (recoverytype_idfk, user_idfk, recovery_encryptedSeed, recovery_key) VALUES (4, $user_id, " . $db->escapeString(json_encode($encryptedSeed)) . "," . $db->escapeString($key) . ")");
        $recovery_id = $db->connection->insert_id;
        return ["recovery_id" => $recovery_id];
    }

    static function test() {
        $twitter = new \Abraham\TwitterOAuth\TwitterOAuth(getenv("TWITTER_APP_ID"), getenv("TWITTER_APP_SECRET"), "114537347-VGSfeuT2k8vKI0cCBa9NnME7bAcDrcTYjYQFWl2e", "upW2GBROFcWslw9KUcKSK1QAtc1GWTc3AZPKvxXslDPXG");
        $content = $twitter->get("account/verify_credentials");
        print_r($content->id_str);
    }

    static function getEncryptedSeed($accessToken, $accessTokenSecret, $originalSignupEmail)
    {
        $db = \Morpher\DbConnector::getInstance();

        // Call Facebook API
        $twitter = new \Abraham\TwitterOAuth\TwitterOAuth(getenv("TWITTER_APP_ID"), getenv("TWITTER_APP_SECRET"), $accessToken, $accessTokenSecret);
        $content = $twitter->get("account/verify_credentials");

        /**
         * validate key
         */
        $key = hash("sha256", getenv("TWITTER_APP_ID") . $content->id_str);

        $result = $db->connection->query("SELECT r.* FROM `Recovery` r JOIN `User` u ON u.user_id = r.user_idfk WHERE r.recovery_key = " . $db->escapeString($key) . " AND r.recoverytype_idfk = 4 AND u.user_email = " . $db->escapeString($originalSignupEmail));
        if ($result->num_rows > 0) {
            return $result->fetch_object()->recovery_encryptedSeed;
        }

        return false;
    }
}
