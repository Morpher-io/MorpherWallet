<?php

namespace Morpher\SeedRecovery;

class Facebook
{
    /**
     * @param $accessToken is the access token generated by the frontend to double confirm the key
     * @param $key is the key generated by the frontend from app_id + user_id
     * @param $encryptedSeed is the seed encrypted with the user_id
     * @param $originalSignupEmail is the mail that might differ from the facebook email address, originally used to signup to Morpher (email/password signup with additional facebook recovery later added). If false, then facebook was used to signup to morpher in the first place
     */
    static function saveAndOverride($accessToken, $key, $encryptedSeed, $originalSignupEmail = false)
    {
        $db = \Morpher\DbConnector::getInstance();

        // Call Facebook API
        $facebook = new \Facebook\Facebook([
            'app_id'      => getenv("FACEBOOK_APP_ID"),
            'app_secret'     => getenv("FACEBOOK_APP_SECRET"),
            'default_graph_version'  => 'v7.0'
        ]);

        $facebook->setDefaultAccessToken($accessToken);

        $graph_response = $facebook->get("/me?fields=name,email", $accessToken);
        $facebook_user_info = $graph_response->getGraphUser();
        if (!$originalSignupEmail) {
            $originalSignupEmail = $facebook_user_info["email"];
        }

        $result = $db->connection->query("SELECT * FROM `User` WHERE user_email = " . $db->escapeString($originalSignupEmail));
        $user_id = 0;
        if ($result->num_rows > 0) {
            $user_id = $result->fetch_row()[0];
            $db->connection->query("DELETE FROM Recovery WHERE user_idfk = $user_id AND recoverytype_idfk = 2");
        } else {
            $db->connection->query("INSERT INTO User (user_email) VALUES ( " . $db->escapeString($originalSignupEmail) . " )");

            $user_id = $db->connection->insert_id;
        }

        /**
         * validate key
         */
        $validateKey = hash("sha256", getenv("FACEBOOK_APP_ID") . $facebook_user_info["id"]);
        if ($validateKey == $key) {

            $db->connection->query("INSERT INTO Recovery (recoverytype_idfk, user_idfk, recovery_encryptedSeed, recovery_key) VALUES (2, $user_id, " . $db->escapeString(json_encode($encryptedSeed)) . "," . $db->escapeString($key) . ")");

            $recovery_id = $db->connection->insert_id;

            return ["recovery_id" => $recovery_id];
        } else {
            return ["error" => "Key isn't validated, aborting insert"];
        }
    }

    static function getEncryptedSeed($accessToken, $key)
    {
        $db = \Morpher\DbConnector::getInstance();

        // Call Facebook API
        $facebook = new \Facebook\Facebook([
            'app_id'      => getenv("FACEBOOK_APP_ID"),
            'app_secret'     => getenv("FACEBOOK_APP_SECRET"),
            'default_graph_version'  => 'v7.0'
        ]);

        $facebook->setDefaultAccessToken($accessToken);

        $graph_response = $facebook->get("/me?fields=name,email", $accessToken);
        $facebook_user_info = $graph_response->getGraphUser();

        /**
         * validate key
         */
        $validateKey = hash("sha256", getenv("FACEBOOK_APP_ID") . $facebook_user_info["id"]);
        if ($validateKey == $key) {
            $result = $db->connection->query("SELECT * FROM `Recovery` WHERE recovery_key = " . $db->escapeString($key). " AND recoverytype_idfk = 2");
            if ($result->num_rows > 0) {
                return $result->fetch_object()->recovery_encryptedSeed;
            }
        }

        return false;
    }
}
